 Full Code (with Step-by-Step Explanation)

import tkinter as tk
â–¶ Imports Tkinter, Pythonâ€™s built-in GUI toolkit. We use tk as a short name to reference widgets and methods.

# Create main window
root = tk.Tk()
root.title("Simple Calculator")
root.geometry("300x400")
â–¶ Creates the main application window:

tk.Tk() starts the GUI app.

.title() sets the window title.

.geometry() defines the size (width x height in pixels).

entry = tk.Entry(root, width=16, font=('Arial', 24), borderwidth=2, relief="solid", justify='right')
entry.grid(row=0, column=0, columnspan=4, padx=10, pady=10)
â–¶ Input field where users type or see the result:

tk.Entry is the input box.

font, borderwidth, and relief style the box.

.grid() places it in the first row and spans 4 columns.


def press(value):
    entry.insert(tk.END, value)
â–¶ When a number/operator button is pressed, this function adds its value to the entry field.


def equal():
    try:
        result = str(eval(entry.get()))
        entry.delete(0, tk.END)
        entry.insert(0, result)
    except:
        entry.delete(0, tk.END)
        entry.insert(0, "Error")
â–¶ Handles the = button:

Gets the expression from the input.

eval() evaluates math expressions like '2+3*4'.

Handles any error (e.g., invalid input) and shows "Error".

def clear():
    entry.delete(0, tk.END)
â–¶ Clears the input box (used for the C button).

buttons = [
    ('7', 1, 0), ('8', 1, 1), ('9', 1, 2), ('/', 1, 3),
    ('4', 2, 0), ('5', 2, 1), ('6', 2, 2), ('*', 2, 3),
    ('1', 3, 0), ('2', 3, 1), ('3', 3, 2), ('-', 3, 3),
    ('0', 4, 0), ('.', 4, 1), ('=', 4, 2), ('+', 4, 3),
    ('C', 5, 0)
]
â–¶ Defines the button layout as a list of tuples:
(text on button, row number, column number).

for (text, row, col) in buttons:
    if text == '=':
        tk.Button(root, text=text, width=5, height=2, command=equal).grid(row=row, column=col, padx=5, pady=5)
    elif text == 'C':
        tk.Button(root, text=text, width=23, height=2, command=clear).grid(row=row, column=col, columnspan=4, padx=5, pady=5)
    else:
        tk.Button(root, text=text, width=5, height=2, command=lambda t=text: press(t)).grid(row=row, column=col, padx=5, pady=5)
â–¶ Creates and places buttons on the GUI using a loop:

'=' uses equal() function

'C' uses clear() and stretches across the full width

All others use press() with the value

lambda t=text: press(t) ensures the correct value is passed when button is clicked.


root.mainloop()
â–¶ Starts the GUI event loopâ€”keeps the window open and responds to user actions like clicks.

ðŸ§  Summary of Components
Part	Description
tk.Entry	Input text field
tk.Button	Buttons (numbers and operators)
.grid()	Places widgets in table-style layout
press()	Appends clicked number/operator
equal()	Calculates and displays result
clear()	Resets the input box
eval()	Evaluates math expression
